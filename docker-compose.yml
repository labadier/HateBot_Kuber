services:
  ### MLflow Server
  mlflow:
    container_name: mlflow_rlabadie
    ports:
      - "0.0.0.0:10010:8080"
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:8080
    volumes:
      - ./host_mounting_points/mlruns:/mlflow/mlruns
    command: >
      mlflow server
        --backend-store-uri sqlite:///mlflow/mlruns/mlflow.db
        --default-artifact-root /mlflow/mlruns
        --host 0.0.0.0
        --port 8080
    networks:
      - mlops_net_rlabadie

  ### Training Container
  trainer:
    container_name: trainer_rlabadie
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:8080
      - EXPERIMENT_NAME=Offensive
      - MODEL_NAME=OffenseBERT
    depends_on:
      - mlflow
    volumes:
      - ./host_mounting_points/mlruns:/mlflow/mlruns
      - ./dataset:/workspace/dataset
    # deploy: 
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia 
    #           device_ids: ["0"] 
    #           capabilities: [gpu]
    command: python training.py
    networks:
        - mlops_net_rlabadie

  ### Inference Container
  inference:
    container_name: inference_rlabadie
    ports:
      - "0.0.0.0:10011:8082"
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:8080
      - MODEL_NAME=OffenseBERT
      - PYTHON_PORT=8082
    # depends_on:
    #   - mlflow
    # volumes:
    #   - ./host_mounting_points/mlruns:/mlflow/mlruns
    command: python app.py 
    networks:
      - mlops_net_rlabadie

networks:
  mlops_net_rlabadie:
    name: mlops_network_rlabadie
    driver: bridge